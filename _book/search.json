[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "clase 22 de agosto 2023",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "Tarea1.html",
    "href": "Tarea1.html",
    "title": "3  plt.show()",
    "section": "",
    "text": "Exploring functions to generate random variables with a Bernoulli distribution.py\n\nimport numpy as np\nfrom scipy.stats import bernoulli\nimport matplotlib.pyplot as plt\nfig_01, ax_01 = plt.subplots(1, 1)\nfig_02, ax_02 = plt.subplots(1, 1)\np = 0.3\nmean, var, skew, kurt = bernoulli.stats(p, moments='mvsk')\nprint(mean, var, skew,kurt)\n\nx = np.arange(bernoulli.ppf(0.01, p),\n              bernoulli.ppf(0.99, p))\nax_01.plot(x, bernoulli.pmf(x, p), 'bo', ms=8, label='bernoulli pmf')\nax_01.vlines(x, 0, bernoulli.pmf(x, p), colors='b', lw=5, alpha=0.5)\nr = bernoulli.rvs(p, size=1000)\nax_02.hist(r, bins=200)\nplt.show()\n\n \n\n\nExploring functions to generate random variables with a Gaussian distribution.py\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nfig, ax = plt.subplots(1, 1)\nmean, var, skew, kurt = norm.stats(moments='mvsk')\n\nx = np.linspace(norm.ppf(0.01), norm.ppf(0.99), 100)\nax.plot(\n    x,\n    norm.pdf(x),\n    'r-',\n    lw=5,\n    alpha=0.6,\n    label='norm pdf'\n)\nrv = norm()\nax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf')\nvals = norm.ppf([0.001, 0.5, 0.999])\n\nnp.allclose([0.001, 0.5, 0.999], norm.cdf(vals))\n\nr = norm.rvs(size=50000)\n\nax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\nax.set_xlim([x[0], x[-1]])\nax.legend(loc='best', frameon=False)\nplt.show()\n\n\n\n\nFigura 3\n\n\n\n\nRevising multivariate Gaussian.py\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d\nfrom scipy.stats import multivariate_normal\n\nx = np.linspace(0, 5, 100, endpoint=False)\ny = multivariate_normal.pdf(x, mean=2.5, cov=0.5);\n\nfig1 = plt.figure()\nax = fig1.add_subplot(111)\nax.plot(x, y)\n\nx, y = np.mgrid[-5:5:.1, -5:5:.1]\npos = np.dstack((x, y))\nrv = multivariate_normal([0.5, -0.2], [[2.0, 0.3], [0.3, 0.5]])\nfig2 = plt.figure()\nax2 = fig2.add_subplot(111)\nax2.contourf(x, y, rv.pdf(pos))\n# plt.show()\n\nax = plt.figure().add_subplot(projection='3d')\nax.plot_surface(\n    x,\n    y,\n    rv.pdf(pos),\n    edgecolor='royalblue',\n    lw=0.5,\n    rstride=8,\n    cstride=8,\n    alpha=0.4\n)\nax.contour(x, y, rv.pdf(pos), zdir='z', offset=-.2, cmap='coolwarm')\nax.contour(x, y, rv.pdf(pos), zdir='x', offset=-5, cmap='coolwarm')\nax.contour(x, y, rv.pdf(pos), zdir='y', offset=5, cmap='coolwarm')\n\nax.set(\n    xlim=(-5, 5),\n    ylim=(-5, 5),\n    zlim=(-0.2, 0.2),\n    xlabel='X',\n    ylabel='Y',\n    zlabel='Z'\n)\nplt.show()"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]